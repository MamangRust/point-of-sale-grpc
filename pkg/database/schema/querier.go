// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"
)

type Querier interface {
	AssignRoleToUser(ctx context.Context, arg AssignRoleToUserParams) (*UserRole, error)
	CreateRefreshToken(ctx context.Context, arg CreateRefreshTokenParams) (*RefreshToken, error)
	CreateRole(ctx context.Context, roleName string) (*Role, error)
	// Create User
	CreateUser(ctx context.Context, arg CreateUserParams) (*User, error)
	// Delete All Trashed Roles Permanently
	DeleteAllPermanentRoles(ctx context.Context) error
	// Delete All Trashed Users Permanently
	DeleteAllPermanentUsers(ctx context.Context) error
	DeletePermanentRole(ctx context.Context, roleID int32) error
	DeleteRefreshToken(ctx context.Context, token string) error
	DeleteRefreshTokenByUserId(ctx context.Context, userID int32) error
	// Delete User Permanently
	DeleteUserPermanently(ctx context.Context, userID int32) error
	FindRefreshTokenByToken(ctx context.Context, token string) (*RefreshToken, error)
	FindRefreshTokenByUserId(ctx context.Context, userID int32) (*RefreshToken, error)
	// Get All Active Roles
	GetActiveRoles(ctx context.Context, arg GetActiveRolesParams) ([]*GetActiveRolesRow, error)
	GetRole(ctx context.Context, roleID int32) (*Role, error)
	GetRoleByName(ctx context.Context, roleName string) (*Role, error)
	GetRoles(ctx context.Context, arg GetRolesParams) ([]*GetRolesRow, error)
	// Get All Trashed Roles
	GetTrashedRoles(ctx context.Context, arg GetTrashedRolesParams) ([]*GetTrashedRolesRow, error)
	// Get Trashed By User ID
	GetTrashedUserByID(ctx context.Context, userID int32) (*User, error)
	GetTrashedUserRoles(ctx context.Context, userID int32) ([]*GetTrashedUserRolesRow, error)
	// Get User by Email
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	// Get User by ID
	GetUserByID(ctx context.Context, userID int32) (*User, error)
	GetUserRoles(ctx context.Context, userID int32) ([]*Role, error)
	// Get Trashed Users with Pagination and Total Count
	GetUserTrashed(ctx context.Context, arg GetUserTrashedParams) ([]*GetUserTrashedRow, error)
	// Get Users with Pagination and Total Count
	GetUsers(ctx context.Context, arg GetUsersParams) ([]*GetUsersRow, error)
	// Get Active Users with Pagination and Total Count
	GetUsersActive(ctx context.Context, arg GetUsersActiveParams) ([]*GetUsersActiveRow, error)
	RemoveRoleFromUser(ctx context.Context, arg RemoveRoleFromUserParams) error
	// Restore All Trashed Roles
	RestoreAllRoles(ctx context.Context) error
	// Restore All Trashed Users
	RestoreAllUsers(ctx context.Context) error
	RestoreRole(ctx context.Context, roleID int32) error
	// Restore Trashed User
	RestoreUser(ctx context.Context, userID int32) error
	RestoreUserRole(ctx context.Context, userRoleID int32) error
	TrashRole(ctx context.Context, roleID int32) error
	// Trash User
	TrashUser(ctx context.Context, userID int32) error
	TrashUserRole(ctx context.Context, userRoleID int32) error
	UpdateRefreshTokenByUserId(ctx context.Context, arg UpdateRefreshTokenByUserIdParams) error
	UpdateRole(ctx context.Context, arg UpdateRoleParams) (*Role, error)
	// Update User
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
}

var _ Querier = (*Queries)(nil)
