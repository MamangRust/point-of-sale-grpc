// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.2
// source: cashier.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindAllCashierRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search        string                 `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllCashierRequest) Reset() {
	*x = FindAllCashierRequest{}
	mi := &file_cashier_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllCashierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllCashierRequest) ProtoMessage() {}

func (x *FindAllCashierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllCashierRequest.ProtoReflect.Descriptor instead.
func (*FindAllCashierRequest) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{0}
}

func (x *FindAllCashierRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAllCashierRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindAllCashierRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type FindByMerchantCashierRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantId    int32                  `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search        string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByMerchantCashierRequest) Reset() {
	*x = FindByMerchantCashierRequest{}
	mi := &file_cashier_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByMerchantCashierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByMerchantCashierRequest) ProtoMessage() {}

func (x *FindByMerchantCashierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByMerchantCashierRequest.ProtoReflect.Descriptor instead.
func (*FindByMerchantCashierRequest) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{1}
}

func (x *FindByMerchantCashierRequest) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *FindByMerchantCashierRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindByMerchantCashierRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindByMerchantCashierRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type FindByIdCashierRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByIdCashierRequest) Reset() {
	*x = FindByIdCashierRequest{}
	mi := &file_cashier_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByIdCashierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByIdCashierRequest) ProtoMessage() {}

func (x *FindByIdCashierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByIdCashierRequest.ProtoReflect.Descriptor instead.
func (*FindByIdCashierRequest) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{2}
}

func (x *FindByIdCashierRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateCashierRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantId    int32                  `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCashierRequest) Reset() {
	*x = CreateCashierRequest{}
	mi := &file_cashier_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCashierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCashierRequest) ProtoMessage() {}

func (x *CreateCashierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCashierRequest.ProtoReflect.Descriptor instead.
func (*CreateCashierRequest) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCashierRequest) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *CreateCashierRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateCashierRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateCashierRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CashierId     int32                  `protobuf:"varint,1,opt,name=cashier_id,json=cashierId,proto3" json:"cashier_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCashierRequest) Reset() {
	*x = UpdateCashierRequest{}
	mi := &file_cashier_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCashierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCashierRequest) ProtoMessage() {}

func (x *UpdateCashierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCashierRequest.ProtoReflect.Descriptor instead.
func (*UpdateCashierRequest) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCashierRequest) GetCashierId() int32 {
	if x != nil {
		return x.CashierId
	}
	return 0
}

func (x *UpdateCashierRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CashierResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId    int32                  `protobuf:"varint,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CashierResponse) Reset() {
	*x = CashierResponse{}
	mi := &file_cashier_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashierResponse) ProtoMessage() {}

func (x *CashierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashierResponse.ProtoReflect.Descriptor instead.
func (*CashierResponse) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{5}
}

func (x *CashierResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CashierResponse) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *CashierResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CashierResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CashierResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CashierResponseDeleteAt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId    int32                  `protobuf:"varint,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     string                 `protobuf:"bytes,6,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CashierResponseDeleteAt) Reset() {
	*x = CashierResponseDeleteAt{}
	mi := &file_cashier_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashierResponseDeleteAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashierResponseDeleteAt) ProtoMessage() {}

func (x *CashierResponseDeleteAt) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashierResponseDeleteAt.ProtoReflect.Descriptor instead.
func (*CashierResponseDeleteAt) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{6}
}

func (x *CashierResponseDeleteAt) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CashierResponseDeleteAt) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *CashierResponseDeleteAt) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CashierResponseDeleteAt) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CashierResponseDeleteAt) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CashierResponseDeleteAt) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type ApiResponseCashier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *CashierResponse       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseCashier) Reset() {
	*x = ApiResponseCashier{}
	mi := &file_cashier_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseCashier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseCashier) ProtoMessage() {}

func (x *ApiResponseCashier) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseCashier.ProtoReflect.Descriptor instead.
func (*ApiResponseCashier) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{7}
}

func (x *ApiResponseCashier) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseCashier) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseCashier) GetData() *CashierResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseCashierDeleteAt struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Status        string                   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *CashierResponseDeleteAt `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseCashierDeleteAt) Reset() {
	*x = ApiResponseCashierDeleteAt{}
	mi := &file_cashier_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseCashierDeleteAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseCashierDeleteAt) ProtoMessage() {}

func (x *ApiResponseCashierDeleteAt) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseCashierDeleteAt.ProtoReflect.Descriptor instead.
func (*ApiResponseCashierDeleteAt) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{8}
}

func (x *ApiResponseCashierDeleteAt) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseCashierDeleteAt) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseCashierDeleteAt) GetData() *CashierResponseDeleteAt {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponsesCashier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*CashierResponse     `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsesCashier) Reset() {
	*x = ApiResponsesCashier{}
	mi := &file_cashier_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsesCashier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsesCashier) ProtoMessage() {}

func (x *ApiResponsesCashier) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsesCashier.ProtoReflect.Descriptor instead.
func (*ApiResponsesCashier) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{9}
}

func (x *ApiResponsesCashier) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsesCashier) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsesCashier) GetData() []*CashierResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseCashierDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseCashierDelete) Reset() {
	*x = ApiResponseCashierDelete{}
	mi := &file_cashier_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseCashierDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseCashierDelete) ProtoMessage() {}

func (x *ApiResponseCashierDelete) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseCashierDelete.ProtoReflect.Descriptor instead.
func (*ApiResponseCashierDelete) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{10}
}

func (x *ApiResponseCashierDelete) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseCashierDelete) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ApiResponseCashierAll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseCashierAll) Reset() {
	*x = ApiResponseCashierAll{}
	mi := &file_cashier_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseCashierAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseCashierAll) ProtoMessage() {}

func (x *ApiResponseCashierAll) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseCashierAll.ProtoReflect.Descriptor instead.
func (*ApiResponseCashierAll) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{11}
}

func (x *ApiResponseCashierAll) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseCashierAll) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ApiResponsePaginationCashierDeleteAt struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Status        string                     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*CashierResponseDeleteAt `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *PaginationMeta            `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsePaginationCashierDeleteAt) Reset() {
	*x = ApiResponsePaginationCashierDeleteAt{}
	mi := &file_cashier_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsePaginationCashierDeleteAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsePaginationCashierDeleteAt) ProtoMessage() {}

func (x *ApiResponsePaginationCashierDeleteAt) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsePaginationCashierDeleteAt.ProtoReflect.Descriptor instead.
func (*ApiResponsePaginationCashierDeleteAt) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{12}
}

func (x *ApiResponsePaginationCashierDeleteAt) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsePaginationCashierDeleteAt) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsePaginationCashierDeleteAt) GetData() []*CashierResponseDeleteAt {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiResponsePaginationCashierDeleteAt) GetPagination() *PaginationMeta {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ApiResponsePaginationCashier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*CashierResponse     `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *PaginationMeta        `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsePaginationCashier) Reset() {
	*x = ApiResponsePaginationCashier{}
	mi := &file_cashier_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsePaginationCashier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsePaginationCashier) ProtoMessage() {}

func (x *ApiResponsePaginationCashier) ProtoReflect() protoreflect.Message {
	mi := &file_cashier_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsePaginationCashier.ProtoReflect.Descriptor instead.
func (*ApiResponsePaginationCashier) Descriptor() ([]byte, []int) {
	return file_cashier_proto_rawDescGZIP(), []int{13}
}

func (x *ApiResponsePaginationCashier) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsePaginationCashier) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsePaginationCashier) GetData() []*CashierResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiResponsePaginationCashier) GetPagination() *PaginationMeta {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_cashier_proto protoreflect.FileDescriptor

var file_cashier_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x15, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x88, 0x01,
	0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x28, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64,
	0x42, 0x79, 0x49, 0x64, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x64, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x17, 0x43,
	0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6f, 0x0a, 0x12, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f, 0x0a, 0x1a, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73,
	0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x70, 0x0a, 0x13, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x18,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x49, 0x0a, 0x15, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x24, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xad, 0x01, 0x0a, 0x1c, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xbd, 0x07, 0x0a, 0x0e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x43, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x6c, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d, 0x46,
	0x69, 0x6e, 0x64, 0x42, 0x79, 0x54, 0x72, 0x61, 0x73, 0x68, 0x65, 0x64, 0x12, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x74, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65,
	0x72, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73,
	0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x73, 0x68, 0x65, 0x64,
	0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x74, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x64, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x74, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x43, 0x61, 0x73,
	0x68, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x41, 0x6c,
	0x6c, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c,
	0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6f, 0x66,
	0x73, 0x61, 0x6c, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_cashier_proto_rawDescOnce sync.Once
	file_cashier_proto_rawDescData []byte
)

func file_cashier_proto_rawDescGZIP() []byte {
	file_cashier_proto_rawDescOnce.Do(func() {
		file_cashier_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cashier_proto_rawDesc), len(file_cashier_proto_rawDesc)))
	})
	return file_cashier_proto_rawDescData
}

var file_cashier_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_cashier_proto_goTypes = []any{
	(*FindAllCashierRequest)(nil),                // 0: pb.FindAllCashierRequest
	(*FindByMerchantCashierRequest)(nil),         // 1: pb.FindByMerchantCashierRequest
	(*FindByIdCashierRequest)(nil),               // 2: pb.FindByIdCashierRequest
	(*CreateCashierRequest)(nil),                 // 3: pb.CreateCashierRequest
	(*UpdateCashierRequest)(nil),                 // 4: pb.UpdateCashierRequest
	(*CashierResponse)(nil),                      // 5: pb.CashierResponse
	(*CashierResponseDeleteAt)(nil),              // 6: pb.CashierResponseDeleteAt
	(*ApiResponseCashier)(nil),                   // 7: pb.ApiResponseCashier
	(*ApiResponseCashierDeleteAt)(nil),           // 8: pb.ApiResponseCashierDeleteAt
	(*ApiResponsesCashier)(nil),                  // 9: pb.ApiResponsesCashier
	(*ApiResponseCashierDelete)(nil),             // 10: pb.ApiResponseCashierDelete
	(*ApiResponseCashierAll)(nil),                // 11: pb.ApiResponseCashierAll
	(*ApiResponsePaginationCashierDeleteAt)(nil), // 12: pb.ApiResponsePaginationCashierDeleteAt
	(*ApiResponsePaginationCashier)(nil),         // 13: pb.ApiResponsePaginationCashier
	(*PaginationMeta)(nil),                       // 14: pb.PaginationMeta
	(*emptypb.Empty)(nil),                        // 15: google.protobuf.Empty
}
var file_cashier_proto_depIdxs = []int32{
	5,  // 0: pb.ApiResponseCashier.data:type_name -> pb.CashierResponse
	6,  // 1: pb.ApiResponseCashierDeleteAt.data:type_name -> pb.CashierResponseDeleteAt
	5,  // 2: pb.ApiResponsesCashier.data:type_name -> pb.CashierResponse
	6,  // 3: pb.ApiResponsePaginationCashierDeleteAt.data:type_name -> pb.CashierResponseDeleteAt
	14, // 4: pb.ApiResponsePaginationCashierDeleteAt.pagination:type_name -> pb.PaginationMeta
	5,  // 5: pb.ApiResponsePaginationCashier.data:type_name -> pb.CashierResponse
	14, // 6: pb.ApiResponsePaginationCashier.pagination:type_name -> pb.PaginationMeta
	0,  // 7: pb.CashierService.FindAll:input_type -> pb.FindAllCashierRequest
	2,  // 8: pb.CashierService.FindById:input_type -> pb.FindByIdCashierRequest
	0,  // 9: pb.CashierService.FindByActive:input_type -> pb.FindAllCashierRequest
	0,  // 10: pb.CashierService.FindByTrashed:input_type -> pb.FindAllCashierRequest
	1,  // 11: pb.CashierService.FindByMerchant:input_type -> pb.FindByMerchantCashierRequest
	3,  // 12: pb.CashierService.CreateCashier:input_type -> pb.CreateCashierRequest
	4,  // 13: pb.CashierService.UpdateCashier:input_type -> pb.UpdateCashierRequest
	2,  // 14: pb.CashierService.TrashedCashier:input_type -> pb.FindByIdCashierRequest
	2,  // 15: pb.CashierService.RestoreCashier:input_type -> pb.FindByIdCashierRequest
	2,  // 16: pb.CashierService.DeleteCashierPermanent:input_type -> pb.FindByIdCashierRequest
	15, // 17: pb.CashierService.RestoreAllCashier:input_type -> google.protobuf.Empty
	15, // 18: pb.CashierService.DeleteAllCashierPermanent:input_type -> google.protobuf.Empty
	13, // 19: pb.CashierService.FindAll:output_type -> pb.ApiResponsePaginationCashier
	7,  // 20: pb.CashierService.FindById:output_type -> pb.ApiResponseCashier
	12, // 21: pb.CashierService.FindByActive:output_type -> pb.ApiResponsePaginationCashierDeleteAt
	12, // 22: pb.CashierService.FindByTrashed:output_type -> pb.ApiResponsePaginationCashierDeleteAt
	13, // 23: pb.CashierService.FindByMerchant:output_type -> pb.ApiResponsePaginationCashier
	7,  // 24: pb.CashierService.CreateCashier:output_type -> pb.ApiResponseCashier
	7,  // 25: pb.CashierService.UpdateCashier:output_type -> pb.ApiResponseCashier
	8,  // 26: pb.CashierService.TrashedCashier:output_type -> pb.ApiResponseCashierDeleteAt
	8,  // 27: pb.CashierService.RestoreCashier:output_type -> pb.ApiResponseCashierDeleteAt
	10, // 28: pb.CashierService.DeleteCashierPermanent:output_type -> pb.ApiResponseCashierDelete
	11, // 29: pb.CashierService.RestoreAllCashier:output_type -> pb.ApiResponseCashierAll
	11, // 30: pb.CashierService.DeleteAllCashierPermanent:output_type -> pb.ApiResponseCashierAll
	19, // [19:31] is the sub-list for method output_type
	7,  // [7:19] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_cashier_proto_init() }
func file_cashier_proto_init() {
	if File_cashier_proto != nil {
		return
	}
	file_api_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cashier_proto_rawDesc), len(file_cashier_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cashier_proto_goTypes,
		DependencyIndexes: file_cashier_proto_depIdxs,
		MessageInfos:      file_cashier_proto_msgTypes,
	}.Build()
	File_cashier_proto = out.File
	file_cashier_proto_goTypes = nil
	file_cashier_proto_depIdxs = nil
}
